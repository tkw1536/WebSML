The compiler system
-------------------------

To create a new compiler, create a new file called <CompilerName>.compiler.js. 

It has to module.export a class with the following properties: 

* <function> __constructor__(<function> callback(<boolean> success), <string> cwd, <userData> userData, [dirname; filename])
	* initialiser
	* cwd is the working directory of the compiler
	* userData is information about the user. (undocumented as of yet). 
	* if arguments not given, starts an empty compiler. 
	* if argumentrs are given, runs the file in the given directory. 
	* callback should be called once preparation is done, success should reflect if the process was successfull or not. 
	* returns a new Compiler object. 
* <function> start()
	* starts the process if it is ready. (After callback)
	* returns boolean indicating if it was successfull or not. 
* <EventEmitter> Events: 
	* <Event> stderr({<string> data}): Raised when the compiler process writes to stderr
	* <Event> stdout({<string> data}): Raised when the compiler process writes to stdout
	* <Event> exit({<int> code, <int> signal}): Raised when the compiler process ends with the specefied code / signal. 
	* <EventHandler> stdIn(<string> data): Sends data to stdin of the compiler process. 
	* <EventHandler> ctrlC(): Sends CTRL-C to the process
	* <EventHandler> ctrlD(): Sends CTRL-D to the process (and ends it). 

* <static Array of strings> supportedFileExtensions: Array of File Extensions supported by the compiler. 
* <static string> compilerName: Name of the compiler
* <static string> compilerVersion: Version of the compiler
* <static string> compilerDescription: Compiler description. 


If you use a standard compiler which runs on the normal command line, then the file compiler_stdprocess.js can be required, see that file for details.  
